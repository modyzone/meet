{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","EventGenre.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","handleClickDetailsButton","e","current","state","expanded","setState","eventDetailsButtonText","this","event","className","summary","start","dateTime","location","href","htmlLink","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","NumberOfEvents","numberOfEvents","number","updateNumberofEvents","EventGenre","useState","data","setData","colors","useEffect","getData","genre","split","includes","name","ResponsiveContainer","height","PieChart","width","Pie","cx","cy","innerRadius","dataKey","fill","label","percent","toFixed","outerRadius","entry","index","Cell","Legend","layout","verticalAlign","align","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","startsWith","done","navigator","onLine","localStorage","getItem","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","setItem","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","locationEvents","city","shift","mounted","addEventListener","warnText","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.55c13284.chunk.js","sourcesContent":["/*import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n\r\n  render() {\r\n      const { event } = this.props;\r\n      console.log(event);\r\n    return (\r\n      <div>\r\n        <ul>\r\n          <li>{event.location}</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n} */\r\n\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass Event extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      expanded: false,\r\n      eventDetailsButtonText: 'More details'\r\n    };\r\n  }\r\n\r\n  handleClickDetailsButton = (e) => {\r\n    const current = this.state.expanded;\r\n    this.setState({\r\n      expanded: current ? false : true,\r\n      eventDetailsButtonText: current ? 'More details' : 'Hide details'\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { expanded, eventDetailsButtonText } = this.state;\r\n    const { event } = this.props;\r\n    return (\r\n      <div className='event'>\r\n        <h2 className='event__name'>{event.summary}</h2>\r\n        <p className='event__start'>{event.start.dateTime}</p>\r\n        <p className='event__title-line-2'>\r\n          <span className='event__title-line-2__at-sign'>@</span>\r\n          <span className='event__title-line-2__title'>{event.summary}</span>\r\n          <span className='event__title-line-2__pipe'> | </span>\r\n          <span className='event__title-line-2__city'>{event.location}</span>\r\n        </p>\r\n\r\n        {expanded &&\r\n          <div className='event__more-details' >\r\n            <h3 className='event__more-details__about-label'>About event</h3>\r\n            <p className='event__more-details__link-line'>\r\n              <a className='event__more-details__link-line__link' href={event.htmlLink} >{event.htmlLink}</a>\r\n            </p>\r\n            <p className='event__more-details__description'>{event.description}</p>\r\n          </div>\r\n        }\r\n\r\n        <button className='event__details-button'\r\n          onClick={(e) => this.handleClickDetailsButton(e)}>{eventDetailsButtonText}</button>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n       \r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id} className=\"event\">\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()} className=\"error-text\">{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'yellow';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'orange';\r\n  }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, WarningAlert };","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n    }\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ showSuggestions: true });\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                infoText: 'We can not find the city you are looking for. Please try another city',\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                query: value,\r\n                suggestions,\r\n                infoText: ''\r\n            });\r\n        }\r\n    };\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        });\r\n        this.props.updateEvents(suggestion);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n                />\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n                    ))}\r\n\r\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    numberOfEvents: 32,\r\n    infoText: ''\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const number = event.target.value;\r\n    if (number <= 0 || number > 32) {\r\n      this.setState({\r\n        numberOfEvents: number,\r\n        infoText: 'Choose number between 1 and 32'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        numberOfEvents: number,\r\n        infoText: ''\r\n      });\r\n      this.props.updateNumberofEvents(number);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Change number of shown events between 1-32\r\n        </p>\r\n\r\n        <input type=\"number\" value={this.state.numberOfEvents} className=\"newValue\" onChange={(e) => this.handleInputChanged(e)} />\r\n        <p><ErrorAlert text={this.state.infoText} /></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","import React, { useEffect, useState } from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend } from 'recharts';\r\n\r\nconst EventGenre = ({ events }) => {\r\n  const [data, setData] = useState([]);\r\n  const colors = ['#d0427f', '#f8a01f', '#528272', '#f15f4b', '#7dbeb8', '#5c69a0'];\r\n  useEffect(() => { setData(() => getData());}, [events]);\r\n\r\n  const getData = () => {\r\n    const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\r\n    const data = genres.map((genre) => {\r\n      const value = events.filter((event) => event.summary.split(' ').includes(genre)).length;\r\n      return { name: genre, value: value };\r\n    });\r\n    return data;\r\n  };\r\n\r\n\r\n  return (\r\n    <ResponsiveContainer height={400} >\r\n      <PieChart width={400} height={400}>\r\n        <Pie\r\n          data={data}\r\n          cx='50%'\r\n          cy='50%'\r\n          innerRadius={20}\r\n          dataKey=\"value\"\r\n          fill=\"#8884d8\"\r\n          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n          outerRadius={80}\r\n          >\r\n          {data.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n            ))}\r\n        </Pie>\r\n        <Legend layout=\"horizontal\" verticalAlign=\"top\" align=\"center\" height={45} />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default EventGenre;","const mockData = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n        },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n        },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n           },\r\n           \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n           },\r\n           \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n           },\r\n           \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n           \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n           },\r\n           \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n           \"sequence\": 0,\r\n           \"reminders\": {\r\n            \"useDefault\": true\r\n           },\r\n           \"eventType\": \"default\"\r\n          }, \r\n];\r\n//mockData = JSON.parse(JSON.stringify(mockData));\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n/*\r\nThis function takes an events array, then uses map to create a new array with only locations.\r\nIt will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\nThe Set will remove all duplicates from the array.\r\n*/\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  // when user is not online (is offline) show last viewd eevnts from local storage\r\n  if (!navigator.onLine) {\r\n    const data = localStorage.getItem(\"lastEvents\");\r\n    NProgress.done();\r\n    return data?JSON.parse(data).events:[];;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = \"https://hvi6h1lh8f.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://hvi6h1lh8f.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n        );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    \"https://hvi6h1lh8f.execute-api.eu-central-1.amazonaws.com/dev/api/token\" + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport EventGenre from './EventGenre';\r\nimport { extractLocations, getEvents } from './api';\r\nimport {\r\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: []\r\n  }\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({ events, locations: extractLocations(events) });\r\n      }\r\n    });\r\n    window.addEventListener('offline', () => {\r\n      this.setState({\r\n          warnText: \"You're offline. The data you see may not be up to date.\",\r\n      });\r\n  });\r\n  window.addEventListener('online', () => {\r\n      this.setState({\r\n          warnText: '',\r\n      });\r\n  });\r\n  }\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n  updateEvents = (location) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents = (location === 'all') ?\r\n        events :\r\n        events.filter((event) => event.location === location);\r\n      this.setState({\r\n        events: locationEvents\r\n      });\r\n    });\r\n  }\r\n  getData = () => {\r\n    const {locations, events} = this.state;\r\n    const data = locations.map((location)=>{\r\n      const number = events.filter((event) => event.location === location).length\r\n      const city = location.split(', ').shift()\r\n      return {city, number};\r\n    })\r\n    return data;\r\n  };\r\n  render() {\r\n    const { locations, numberOfEvents, events } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Meet App</h1>\r\n        <h4>Choose your nearest city</h4>\r\n        <CitySearch updateEvents={this.updateEvents} locations={locations} />\r\n        <NumberOfEvents\r\n          updateEvents={this.updateEvents}\r\n          numberOfEvents={numberOfEvents}\r\n        />       \r\n         <div className=\"data-vis-wrapper\">\r\n           <EventGenre events={events} />\r\n           <ResponsiveContainer height={400} >\r\n             <ScatterChart margin={{ top:20, right:20, bottom: 20, left:20 }}>\r\n         <h4>Events in each city</h4>\r\n         <CitySearch updateEvents={this.updateEvents} locations={locations} />\r\n            <CartesianGrid />\r\n            <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\r\n            <YAxis\r\n              allowDecimals={false}\r\n              type=\"number\"\r\n              dataKey=\"number\"\r\n              name=\"number of events\"\r\n            />\r\n            <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\r\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <EventList events={events} />\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\natatus.config('7ad5791bd9b440b6870845eefbcad664').install();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}